<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/6.0.0/rti_routing_service.xsd">
    <!--
    ********************************************************************** 
    RTI Routing Service with Security example                                            
    ********************************************************************** 
    This example bridges data from Domain 0 (unsecured domain) to 
    Domain 1 (secured domain)
    ********************************************************************** 
    -->
    
    <routing_service name="security_example">

        <annotation>
            <documentation>
                Bridges data from Domain 0 (unsecured) to Domain 1 (secured)
            </documentation>
        </annotation>
        
        <domain_route name="DomainRoute" enabled="true">
            <!-- 
            Participant 1 is in Domain 1, an unsecured domain 
            -->
            <participant name="1">
                <domain_id>0</domain_id>
            </participant>
            
            <!-- 
            Participant 2 is in Domain 2, a secured domain 
            -->
            <participant name="2">
                <domain_id>1</domain_id>
                <!--
                Inherit the participant QoS profile from the generic Security profile.
                -->
                
                <participant_qos base_name="BuiltinQosLib::Generic.Security">
                    <property>
                        <value>
                            <element>
                                <name>dds.sec.auth.identity_ca</name>
                                <value>file:../../../resources/certAuthority/dsa01/ca/dsa01RootCaCert.pem</value>
                            </element>
                            <element>
                                <name>dds.sec.auth.identity_certificate</name>
                                <value>file:../../../resources/certAuthority/dsa01/identities/dsa01Peer02Cert.pem</value>
                            </element>
                            <element>
                                <name>dds.sec.auth.private_key</name>
                                <value>file:../../../resources/certAuthority/dsa01/identities/dsa01Peer02Key.pem</value>
                            </element>
                            <element>
                                <name>dds.sec.access.permissions_ca</name>
                                <value>file:../../../resources/certAuthority/dsa01/ca/dsa01RootCaCert.pem</value>
                            </element>
                            <element>
                                <name>dds.sec.access.governance</name>
                                <value>file:./signed/governance.p7s</value>
                            </element>
                            <element>
                                <name>dds.sec.access.permissions</name>
                                <value>file:./signed/permissionsRoutingService.p7s</value>
                            </element>
                        </value>
                    </property>
                </participant_qos>
            </participant>

            <!-- 
            A session with default configuration that contains a single topic route
            -->
            <session name="Session" enabled="true">
                <topic_route name="security_route">
                    <!-- Reading data from participant_1 -->
                    <input participant="1">
                        <registered_type_name>PingType</registered_type_name>
                        <topic_name>PingTopic</topic_name>
                    </input>
                    <output>
                        <registered_type_name>PingType</registered_type_name>
                        <topic_name>PingTopic</topic_name>
                    </output>
                </topic_route>
            </session>
        </domain_route>
    </routing_service>

</dds>
